@page "/classes"

@inject IClassHttpRepository classRepo


<div class="row my-3">
    <div class="col-12 d-flex justify-content-between">
        <h3 class="d-inline">Classes</h3>
        <div>
            <button @onclick="displayModal" class="btn btn-sm btn-primary">Add Class</button>
        </div>
        
    </div>
    
</div>
<div class="row">
    <UpsertClassModalComponent levelDto="_class"
                                OnCreate="HandleCreate"
                                @ref="_classModal" />

    <DeleteClassModalComponent levelDto="_class"
                                OnDelete="HandleDelete"
                                @ref="_classDeleteModal" />

    <ClassTableComponent ListClasses="ListClasses" OnSetDelete="HandleSetDelete" OnSetUpdate="HandleSetUpdate" />
</div>



@code {
    private UpsertClassModalComponent _classModal;
    private DeleteClassModalComponent _classDeleteModal;

    public List<LevelDto>? ListClasses { get; set; }
    private LevelDto _class = new LevelDto();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        ListClasses = await classRepo.GetClasses();
    }

    private void displayModal()
    {
        _classModal.Show();
    }

    private async Task HandleSetUpdate(int id)
    {
        _class = await classRepo.getClass(id);
        _classModal.Show();
    }

    private void HandleSetDelete(LevelDto levelDto)
    {
        _class = levelDto;
        _classDeleteModal.Show();
    }

    private async Task HandleDelete(int id)
    {
        await classRepo.Delete(id);
        _classDeleteModal.Hide();
        ListClasses = await classRepo.GetClasses();
    }

    private async Task HandleCreate(LevelDto levelDto)
    {
        if (levelDto.LevelId == 0)
        {
            _class = await classRepo.Create(levelDto);
            ListClasses = await classRepo.GetClasses();
            _classModal.Hide();
        } 
        else
        {
            await classRepo.Modify(levelDto.LevelId, levelDto);
            ListClasses = await classRepo.GetClasses();
            _classModal.Hide();
        }
    }
}
